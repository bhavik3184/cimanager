"use strict";function query(field){return this instanceof query?(field&&this._field(field),this._eval="",this._lookups={},this._sorts=[],this._actions=[],this._map=[],void(this._reduce=[])):new query(field)}function select(array){return this instanceof select?(query.call(this),void(this.array=array)):new select(array)}var ApplicationConfiguration=function(){var applicationModuleName="cimanager",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","ui.select","ui.bootstrap.datepicker","ui.grid","ui.grid.grouping","ui.grid.selection","ui.grid.exporter"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("companies"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("dashboards"),ApplicationConfiguration.registerModule("itineraries"),ApplicationConfiguration.registerModule("users"),angular.module("companies").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Companies","companies","dropdown","/companies(/create)?"),Menus.addSubMenuItem("topbar","companies","List Companies","companies"),Menus.addSubMenuItem("topbar","companies","New Company","companies/create")}]),angular.module("companies").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCompanies",{url:"/companies",templateUrl:"modules/companies/views/list-companies.client.view.html"}).state("createCompany",{url:"/companies/create",templateUrl:"modules/companies/views/create-company.client.view.html"}).state("viewCompany",{url:"/companies/:companyId",templateUrl:"modules/companies/views/view-company.client.view.html"}).state("editCompany",{url:"/companies/:companyId/edit",templateUrl:"modules/companies/views/edit-company.client.view.html"})}]),angular.module("companies").controller("CompaniesController",["$scope","$stateParams","$location","Authentication","Companies",function($scope,$stateParams,$location,Authentication,Companies){$scope.agendamaster=["Payment","Lead Generation","Offer Follow Up","Business Review meeting","Negotiation or Order Finalaization","Others"],$scope.newItinerary={companyID:"",agenda:"",userID:""},$scope.minDate=new Date,$scope.minDate.setDate($scope.minDate.getDate()-7),$scope.maxDate=new Date,$scope.maxDate.setDate($scope.maxDate.getDate()+60),$scope.authentication=Authentication,$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.disabled=function(date,mode){return"day"===mode&&(0===date.getDay()||6===date.getDay())},$scope.open=function($event){$scope.status.opened=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.status={opened:!1};var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+2),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}],$scope.setitineraryCompany=function($item,$model){$scope.newItinerary.companyID=$item._id,$scope.itineraryItem=$item,$scope.itineraryModel=$model},$scope.setitineraryAgenda=function($item,$model){$scope.newItinerary.agendaID=$item._id,$scope.itineraryItem=$item,$scope.itineraryModel=$model},$scope.create=function(){var company=new Companies({name:this.name});company.$save(function(response){$scope.companies=Companies.query(),$scope.name=""},function(errorResponse){$scope.companyerror=errorResponse.data.message})},$scope.remove=function(company){if(company){company.$remove();for(var i in $scope.companies)$scope.companies[i]===company&&$scope.companies.splice(i,1)}else $scope.company.$remove(function(){$location.path("companies")})},$scope.update=function(){var company=$scope.company;company.$update(function(){$location.path("companies/"+company._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.companies=Companies.query()},$scope.findOne=function(){$scope.company=Companies.get({companyId:$stateParams.companyId})}}]),angular.module("companies").factory("Companies",["$resource",function($resource){return $resource("companies/:companyId",{companyId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),query.select=select,function(){function Expression(term,operator,value,not){this.term=term,this.operator=operator,this.value=value,this.not=not,this.template="%not(%term %operator %value)"}function Sort(term,type,direction){this.term=term,this.type=type||this.regular,this.direction=direction||1}query.prototype={on:function(array){var filter=this.getFilter(),sort=this.getSort();return array=filter?array.filter(filter,query):array.slice(),sort&&array.sort(sort),this._offset?array=array.slice(this._offset,this._offset+(this._limit||0)):this._limit&&(array.length=Math.min(array.length,this._limit)),this._actions.forEach(function(action){array.forEach(action)}),this._map.forEach(function(action){array=array.map(action)}),this._reduce.forEach(function(action){array=array.reduce(action)}),array},getFilter:function(){var queryStr=this.toString();return queryStr?this._filterCache&&this._filterCache.query==queryStr?this._filterCache:(this._filterCache=new Function("obj","try { return "+queryStr+"; } catch (e) { return false; }").bind(this),this._filterCache.query=queryStr,this._filterCache):null},getSort:function(){if(!this._sorts.length)return null;if(this._sortCache)return this._sortCache;var sorts=this._sorts.map(function(sort){return sort.toFunction()});return this._sortCache=function(a,b){for(var direction=0,i=0,len=sorts.length;len>i&&0==direction;)direction=sorts[i++](a,b);return direction}},getActions:function(){return this._actions},_field:function(field){this._expression=new Expression(field)},_add:function(evals,clean){return this._eval+=evals,clean&&(this._expression=null),this},_term:function(condition,field){if(this._flush(),this._eval+=" "+condition+" ","string"==typeof field)this._expression=new Expression(field);else if(field instanceof query){for(var i in field._lookups)field._lookups.hasOwnProperty(i)&&(this._lookups[i]=field._lookups[i]);this._eval+="("+field+")"}else field&&(this._eval+="("+field+")");return this},_oper:function(operator,value){return this._expression&&(this._expression.operator=operator,this._expression.value=value),this},_store:function(value){var postFix=Math.round(1e6*Math.random());return this._lookups[postFix]=value,"this._lookups["+postFix+"]"},_sort:function(param,value){if(0!=this._sorts.length){this._sortCache&&delete this._sortCache;var sort=this._sorts[this._sorts.length-1];return"number"==typeof param?sort.direction=param:(sort.type=sort[param],void 0!==value&&(sort.direction=value)),this}},_flush:function(){this._expression&&(this._eval+=this._expression),this._expression=null},toString:function(){return this._flush(),this._eval},and:function(field){return this._term("&&",field)},or:function(field){return this._term("||",field)},not:function(value){return this._expression&&(this._expression.not=!this._expression.not,void 0!==value&&(this._expression.value=value)),this},equals:function(value){return this._oper("===",value)},is:function(value){return this._oper("===",value)},isnt:function(value){return this.not(),this.is(value)},within:function(value){var lookup={};for(var i in value)lookup[value[i]]=!0;return this._expression&&(this._expression.template="%not%operator[%term]"),this._oper(this._store(lookup))},has:function(value){return this._expression&&(this._expression.template="%not(%term != null && %term.indexOf(%value) != -1)"),this._oper(null,value)},startsWith:function(value){return this._expression&&(this._expression.template="%not(%term != null && %term.substr(0, %operator) == %value)"),this._oper(value.length,value)},endsWith:function(value){return this._expression&&(this._expression.template="%not(%term != null && %term.substr(%term.length - %operator) == %value)"),this._oper(value.length,value)},gt:function(value){return this._oper(">",value)},gte:function(value){return this._oper(">=",value)},lt:function(value){return this._oper("<",value)},lte:function(value){return this._oper("<=",value)},regex:function(value){return this._expression&&(this._expression.template="%not(%term != null && %operator.test(%term))"),this._oper(this._store(value))},same:function(value){return this._expression&&(this._expression.template="%not(JSON.stringify(%term) %operator %value)"),value=JSON.stringify(value),this._oper("==",value)},filter:function(value){if("function"!=typeof value)throw new Error("query.filter() parameter must be a function");return this._expression?this._expression.template="%not(%operator(%term))":(this._expression=new Expression,this._expression.template="%not(%operator(obj))"),this._oper(this._store(value))},search:function(words){words=RegExp.escape(words);var exp=new RegExp("\\b"+words.split(/\s/).join("|\\b"));return this.regex(exp)},type:function(value){return"function"==typeof value?(this._expression?this._expression.template="%not(%term instanceof %operator)":(this._expression=new Expression,this._expression.template="%not(obj instanceof %operator)"),this._oper(this._store(value))):(this._expression&&(this._expression.template="%not(type(%term) %operator %value)"),this._oper("==",value))},sort:function(field){return this._sortCache&&delete this._sortCache,this._sorts.push(new Sort(field)),this},asc:function(){return this._sort(1)},desc:function(){return this._sort(-1)},regular:function(){return this._sort("regular")},numeric:function(){return this._sort("numeric")},date:function(){return this._sort("date")},custom:function(value){return this._sort("custom",value)},limit:function(value){return this._limit=value,this},offset:function(value){return this._offset=value,this},set:function(attrs){return this._actions.push(function(model){model.set(attrs)}),this}},select.prototype=Object.create(query.prototype),select.prototype.where=function(field){return field&&(this._expression=new Expression(field)),this},select.prototype.end=function(){return this.on(this.array)},Expression.prototype={toString:function(){var self=this;return this.template.replace(/%\w+/g,function(match){switch(match){case"%not":return self.not?"!":"";case"%term":return"(typeof obj."+self.term+' !== "undefined" ? obj.'+self.term+' : (typeof obj.get === "function" && obj.get("'+self.term+'")))'+(self.value instanceof Date?".getTime()":"");case"%operator":return self.operator;case"%value":return JSON.stringify(self.value instanceof Date?self.value.getTime():self.value)}})}},Sort.prototype={toFunction:function(){return this.type(this.term,this.direction)},regular:function(prop,order){return function(a,b){return a=a[prop],b=b[prop],null==b?-1:null==a?1:order*(a>b?1:b>a?-1:0)}},numeric:function(prop,order){return function(a,b){return a=parseFloat(a[prop]),b=parseFloat(b[prop]),null==b||isNaN(b)?-1:null==a||isNaN(a)?1:order*(a-b)}},date:function(prop,order){return function(a,b){return a=a[prop],b=b[prop],null==b?-1:null==a?1:order*(a.getTime()-b.getTime())}},custom:function(prop,func){return prop?function(a,b){return func(a[prop],b[prop])}:function(a,b){return func(a,b)}}}}(),"undefined"!=typeof exports&&"undefined"!=typeof module&&(module.exports=query),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("dashboards").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Dashboards","dashboards","dropdown","/dashboards(/create)?"),Menus.addSubMenuItem("topbar","dashboards","List Dashboards","dashboards"),Menus.addSubMenuItem("topbar","dashboards","New Dashboard","dashboards/create")}]),angular.module("dashboards").config(["$stateProvider",function($stateProvider){$stateProvider.state("listDashboards",{url:"/dashboards",templateUrl:"modules/dashboards/views/list-dashboards.client.view.html"}).state("createDashboard",{url:"/dashboards/create",templateUrl:"modules/dashboards/views/create-dashboard.client.view.html"}).state("viewDashboard",{url:"/dashboards/:dashboardId",templateUrl:"modules/dashboards/views/view-dashboard.client.view.html"}).state("editDashboard",{url:"/dashboards/:dashboardId/edit",templateUrl:"modules/dashboards/views/edit-dashboard.client.view.html"})}]),angular.module("dashboards").controller("DashboardsController",["$scope","$stateParams","$location","Authentication","Dashboards","Companies","Itineraries","uiGridGroupingConstants",function($scope,$stateParams,$location,Authentication,Dashboards,Companies,Itineraries,uiGridGroupingConstants){$scope.authentication=Authentication,$scope.agendamaster=["Payment","Lead Generation","Offer Follow Up","Business Review meeting","Negotiation or Order Finalaization","Others"],$scope.newItinerary=new Itineraries,$scope.minDate=new Date,$scope.minDate.setDate($scope.minDate.getDate()-7),$scope.maxDate=new Date,$scope.maxDate.setDate($scope.maxDate.getDate()+60),$scope.itineraryData={enableSorting:!0,enableCellEdit:!1,enableFiltering:!0,treeRowHeaderAlwaysVisible:!1,enableGridMenu:!0,enableSelectAll:!0,exporterCsvFilename:"ItineraryReport.csv",exporterPdfDefaultStyle:{fontSize:9},exporterPdfTableStyle:{margin:[30,30,30,30]},exporterPdfTableHeaderStyle:{fontSize:10,bold:!0,italics:!0,color:"red"},exporterPdfHeader:{text:"Itinerary report",style:"headerStyle"},exporterPdfFooter:function(currentPage,pageCount){return{text:currentPage.toString()+" of "+pageCount.toString(),style:"footerStyle"}},exporterPdfCustomFormatter:function(docDefinition){return docDefinition.styles.headerStyle={fontSize:22,bold:!0},docDefinition.styles.footerStyle={fontSize:10,bold:!0},docDefinition},exporterPdfOrientation:"portrait",exporterPdfPageSize:"LETTER",exporterPdfMaxGridWidth:500,exporterCsvLinkElement:angular.element(document.querySelectorAll(".custom-csv-link-location")),columnDefs:[{name:"Company",field:"company.name",grouping:{groupPriority:1},sort:{priority:1,direction:"asc"},width:"30%"},{name:"Date",field:"date",cellFilter:'date:"dd MMMM,yyyy"',sort:{priority:2,direction:"asc"},width:"18%"},{name:"Agenda",field:"agenda"},{name:"MOM",field:"description"}]},$scope.allItineraryData=new Itineraries,$scope.piCount=3,$scope.create=function(){var company=new Companies({name:this.name});company.$save(function(response){$scope.companies=Companies.query(),$scope.name=""},function(errorResponse){$scope.companyerror=errorResponse.data.message})},$scope.listCompanies=function(){$scope.companies=Companies.query()},$scope.setitineraryCompany=function(item,$model){$scope.newItinerary.company=item._id},$scope.setitineraryAgenda=function(item,$model){$scope.newItinerary.agenda=item},$scope.updateShowingofPlannedItineraries=function($item,$model){$scope.piCount=$item};var fncGetPendingItinerary=function(){function formatDate(date){var d=new Date(date),month=""+(d.getMonth()+1),day=""+d.getDate(),year=d.getFullYear();return month.length<2&&(month="0"+month),day.length<2&&(day="0"+day),[year,month,day].join("-")}Itineraries.query().$promise.then(function(data){$scope.totalPendingItinary=query("date").lt(formatDate(new Date)).and("isCompleted").equals(!1).sort("date").on(data),$scope.totalPendingItinary.length>0&&($scope.pendingItinary=query("date").lt(formatDate(new Date)).and("isCompleted").equals(!1).sort("date").limit(1).on(data))})},fncGetPlannedItineraries=function(){Itineraries.query().$promise.then(function(data){function formatDate(date){var d=new Date(date),month=""+(d.getMonth()+1),day=""+d.getDate(),year=d.getFullYear();return month.length<2&&(month="0"+month),day.length<2&&(day="0"+day),[year,month,day].join("-")}$scope.allItineraryData=data,$scope.allItineraryData=query("date").gt(formatDate(new Date)).and("isCompleted").equals(!1).sort("date").on(data)})},fncGetItinerariesReport=function(){$scope.itineraryData.data=Itineraries.query()};fncGetPendingItinerary(),$scope.plannedItineraries=fncGetPlannedItineraries(),$scope.ItinerariesReport=fncGetItinerariesReport(),$scope.createItinerary=function(){$scope.newItinerary.$save(function(response){$scope.newItinerary=new Itineraries,$scope.today(),$scope.companies.selected="",$scope.agendamaster.selected="",fncGetPlannedItineraries(),fncGetPendingItinerary(),fncGetItinerariesReport()},function(errorResponse){$scope.itineraryError=errorResponse.data.message})},$scope.updateItinerary=function(updateItineray){var toUpdate=new Itineraries({_id:updateItineray._id,description:updateItineray.description});toUpdate.description.length>15?(toUpdate.isCompleted=!0,toUpdate.$update(function(){toUpdate=new Itineraries,$scope.updateItineraryError="",fncGetPendingItinerary(),fncGetItinerariesReport()},function(errorResponse){$scope.updateItineraryError=errorResponse.data.message})):$scope.updateItineraryError="Minutes of meeting needs to be at least 15 characters."},$scope.today=function(){$scope.newItinerary.date=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.disabled=function(date,mode){return"day"===mode&&(0===date.getDay()||6===date.getDay())},$scope.open=function($event){$scope.status.opened=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.status={opened:!1};var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+2),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}]}]),angular.module("dashboards").factory("Dashboards",["$resource",function($resource){return $resource("dashboards/:dashboardId",{dashboardId:"@_id"},{update:{method:"PUT"}})}]),angular.module("itineraries").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Itineraries","itineraries","dropdown","/itineraries(/create)?"),Menus.addSubMenuItem("topbar","itineraries","List Itineraries","itineraries"),Menus.addSubMenuItem("topbar","itineraries","New Itinerary","itineraries/create")}]),angular.module("itineraries").config(["$stateProvider",function($stateProvider){$stateProvider.state("planned-itineraries",{url:"/planned-itineraries",templateUrl:"modules/itineraries/views/planned-itineraries.client.view.html"}).state("listItineraries",{url:"/itineraries",templateUrl:"modules/itineraries/views/list-itineraries.client.view.html"}).state("createItinerary",{url:"/itineraries/create",templateUrl:"modules/itineraries/views/create-itinerary.client.view.html"}).state("viewItinerary",{url:"/itineraries/:itineraryId",templateUrl:"modules/itineraries/views/view-itinerary.client.view.html"}).state("editItinerary",{url:"/itineraries/:itineraryId/edit",templateUrl:"modules/itineraries/views/edit-itinerary.client.view.html"})}]),angular.module("itineraries").controller("ItinerariesController",["$scope","$stateParams","$location","Authentication","Itineraries",function($scope,$stateParams,$location,Authentication,Itineraries){$scope.authentication=Authentication,$scope.create=function(){var itinerary=new Itineraries({name:this.name});itinerary.$save(function(response){$location.path("itineraries/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(itinerary){if(itinerary){itinerary.$remove();for(var i in $scope.itineraries)$scope.itineraries[i]===itinerary&&$scope.itineraries.splice(i,1)}else $scope.itinerary.$remove(function(){$location.path("itineraries")})},$scope.update=function(){var itinerary=$scope.itinerary;itinerary.$update(function(){$location.path("itineraries/"+itinerary._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.itineraries=Itineraries.query()},$scope.findOne=function(){$scope.itinerary=Itineraries.get({itineraryId:$stateParams.itineraryId})}}]),angular.module("itineraries").factory("Itineraries",["$resource",function($resource){return $resource("itineraries/:itineraryId",{itineraryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/dashboards")}).error(function(response){$scope.signinerror=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);